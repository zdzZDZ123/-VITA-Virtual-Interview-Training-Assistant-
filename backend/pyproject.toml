[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "vita-backend"
version = "0.1.0"
description = "VITA (Virtual Interview & Training Assistant) Backend"
readme = "README.md"
requires-python = ">=3.8"
authors = [
    {name = "VITA Team"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.29.0",
    "pydantic>=2.6.4",
    "requests>=2.32.0",
    "aiohttp>=3.9.0",
    "scipy>=1.10.0",
    "torch>=2.2.0,<2.3.0",
    "torchaudio>=2.2.0",
    "openai-whisper>=20231117",
    "faster-whisper>=1.0.0",
    "python-multipart>=0.0.9",
    "aiofiles>=23.2.1",
    "openai>=1.35.0",
    "httpx>=0.25.0",
    "python-dotenv>=1.0.0",
    "loguru>=0.7.2",
    "numpy>=1.24.0",
    "tiktoken>=0.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=24.0.0",
    "ruff>=0.4.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/vita-team/vita"
Repository = "https://github.com/vita-team/vita.git"
Issues = "https://github.com/vita-team/vita/issues"

[tool.setuptools.packages.find]
where = ["."]  # list of folders that contain the packages (["src"] by default)
include = ["core*", "api*", "models*"]  # package names should match these glob patterns (["*"] by default)
exclude = ["tests*"]  # exclude packages matching these glob patterns (empty by default)

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | whisper_download
    | models
  )/
)
'''

[tool.ruff]
# Enable Pyflakes (F) and pycodestyle (E, W) error rules by default.
select = ["E", "F", "W"]
ignore = []

# Allow unused variables in __init__.py.
per-file-ignores = { "__init__.py" = ["F401"] }

# Same as Black.
line-length = 88
target-version = "py38"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
    ".",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "whisper.*",
    "faster_whisper.*",
    "torch.*",
    "torchaudio.*",
]
ignore_missing_imports = true